plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '8.3.0'
    id 'org.jetbrains.kotlin.jvm'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven { url = 'https://maven.fabricmc.net/' }
    maven { url = 'https://jitpack.io' }
    maven { url = "https://repo.essential.gg/repository/maven-public"}
}


fabricApi {
    configureDataGeneration()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.twelvemonkeys.imageio:imageio-webp:3.12.0'
    implementation 'com.jcraft:jsch:0.1.55'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    modImplementation("gg.essential:elementa:$elementaVersion")
    modImplementation(include("gg.essential:universalcraft-$minecraft_version-fabric:$ucVersion"))
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    withSourcesJar()

}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
    repositories {
    }
}



shadowJar {
    archiveClassifier.set('all')
    dependencies {
        include(dependency("org.apache.commons:commons-lang3"))
        include(dependency("com.jcraft:jsch"))
        include(dependency("com.twelvemonkeys.imageio:imageio-webp"))
        include(dependency {'gg.essential:elementa'})
        exclude(dependency('net.fabricmc.fabric-api:fabric-api:.*'))
        exclude(dependency('net.fabricmc:fabric-loader:.*'))
    }
}


build.dependsOn shadowJar
kotlin {
    jvmToolchain(21)
}